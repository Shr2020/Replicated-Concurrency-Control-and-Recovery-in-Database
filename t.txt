begin(T1)
WT1(x, 5)
failsite(c, d)
WT1(x, 10)
recoversite(C, D)
....
end(T1)

x:A,B,C,D

begin(T1)

T1:{site_affect:set, op:[]}

WT1(x, 5)
T1:{site_affect:(A, B, C, D), op:[W(x, 5)]}

sites:
A: x=5
B: x=5
c: x=5
D: x=5


failsite(c, d)
sites avavilable A, B

WT1(x, 10)
T1:{site_affect:(A, B, C, D), op:[W(x, 5), W(x, 10)]}
sites:
A: x=10
B: x=10
C: x=5
D: x=5

recoversite(C, D)
sites avavilable A, B, C, D


end(T1)
final
A: x=10
B: x=10
C: x=5
D: x=5

4 cases
op1:W(ABCD)   op2:W(AB)   : abort
op1:W(AB)   op2:W(ABCD)   : go ahead
op1:W(AB)   op2:R(ABCD)   : abort  : R(AB) go ahead   R()
op1:W(ABCD)   op2:R(AB)   : go ahead


R(t1, x)
R(t2, x)
W(t3, x)
R(t4, x)
commits(t1)
if x has a wait_q then
    x: {t1:[t3, t4] t2:[t3, t4]}
    y: {t1:[t6, t5]}
else:
    x: {} 
    run



wait_queue
{x:{t1: t2, t3, t4}, y:{t2: t1, t4, t5}}


deadlock_grapf:

t1: t2, t3, t4
t2: t1, t4, t5



1) eait_q
2) variable history
3)